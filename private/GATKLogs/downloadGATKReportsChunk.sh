#!/bin/bash
#
# Helper script for downloadGATKReportsFromS3.sh that downloads and parses
# a single chunk's worth of GATK reports from the specified S3 bucket/account.
#
# Usage: downloadGATKReportsChunk.sh chunk_name s3_bucket s3_config_file
#
# chunk_name      Name of a file in ${download_root} containing a list of files
#                 to download from the bucket, as generated by s3cmd ls.
#
# s3_bucket       Name of the S3 bucket to download from
#
# s3_config_file  Config file to use for s3cmd with S3 account credentials
#

s3_root_dir="/humgen/gsa-hpprojects/GATK/reports/s3"
s3_config_dir="${s3_root_dir}/config"
archive_dir="${s3_root_dir}/archive"
download_root="/local/gsa-engineering/GATKLogs"
# script_dir="/local/gsa-engineering/cron_clones/unstable/private/GATKLogs"
script_dir="${download_root}/scripts"
s3funnel_dir="${download_root}/s3funnel_mod"
s3funnel_threads=10

log_event() {
    echo `date` " -- $1"
}

if [ $# -ne 3 ]
then
    echo "Usage: $0 chunk_name s3_bucket s3_config_file"
    exit 1
fi

chunk="$1"
s3_bucket="$2"
s3_config_file="$3"

download_dir="${download_root}/${chunk}_files"
raw_archive="${archive_dir}/${chunk}.raw_files.gz"
xml_archive="${archive_dir}/${chunk}.xml.gz"

export AWS_ACCESS_KEY_ID=`grep access_key "${s3_config_file}" | awk -F' = ' '{ print $2; }'`
export AWS_SECRET_ACCESS_KEY=`grep secret_key "${s3_config_file}" | awk -F' = ' '{ print $2; }'`
export PYTHONPATH="${s3funnel_dir}:${PYTHONPATH}"

mkdir "${download_dir}"
cd "${download_dir}"

log_event "Downloading files for chunk ${chunk}"
cat "${download_root}/${chunk}" | "${s3funnel_dir}/s3funnel" --insecure -t "${s3funnel_threads}" "${s3_bucket}" GET
log_event "Done downloading files for chunk ${chunk}"

cd "${download_root}"

log_event "Deleting files from bucket for chunk ${chunk}"
cat "${chunk}" | "${s3funnel_dir}/s3funnel" --insecure -t "${s3funnel_threads}" "${s3_bucket}" DELETE
log_event "Done deleting files from bucket for chunk ${chunk}"

log_event "Archiving raw files for chunk ${chunk}"
tar -czf "${raw_archive}" -C "${download_root}" "${chunk}_files"
log_event "Done archiving raw files for chunk ${chunk}"

log_event "Parsing report files for chunk ${chunk}"
python "${script_dir}/analyzeRunReports.py" archive "${download_dir}" -o "${xml_archive}" -D
log_event "Done parsing report files for chunk ${chunk}"

log_event "Loading reports to database for chunk ${chunk}"
python "${script_dir}/analyzeRunReports.py" loadToDB "${xml_archive}"
log_event "Done loading reports to database for chunk ${chunk}"

mv "${chunk}" "${archive_dir}/${chunk}.ls"
rmdir "${download_dir}"

touch "${download_root}/${chunk}.done"

exit 0
